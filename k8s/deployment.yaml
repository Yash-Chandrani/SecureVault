apiVersion: apps/v1
kind: Deployment
metadata:
  name: securevault
  labels:
    app: securevault
spec:
  replicas: 3
  selector:
    matchLabels:
      app: securevault
  template:
    metadata:
      labels:
        app: securevault
    spec:
      containers:
      - name: securevault
        image: yourregistry.azurecr.io/securevault:latest
        ports:
        - containerPort: 5000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: securevault-secrets
              key: database-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: securevault-secrets
              key: secret-key
        - name: AZURE_KEY_VAULT_URL
          valueFrom:
            secretKeyRef:
              name: securevault-secrets
              key: azure-keyvault-url
        - name: AZURE_TENANT_ID
          valueFrom:
            secretKeyRef:
              name: securevault-secrets
              key: azure-tenant-id
        - name: AZURE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: securevault-secrets
              key: azure-client-id
        - name: AZURE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: securevault-secrets
              key: azure-client-secret
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: securevault
spec:
  selector:
    app: securevault
  ports:
  - port: 80
    targetPort: 5000
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: securevault-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - securevault.yourdomain.com
    secretName: securevault-tls
  rules:
  - host: securevault.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: securevault
            port:
              number: 80 